#cloud-config

# Install required packages
packages:
 - nginx
 - wireguard
 - net-tools
 - iptables
 - dnsmasq
 - npm

write_files:
  - path: /etc/wireguard/wg0.conf
    owner: root:root
    permissions: "0600"
    content: |
      [Interface]
      PrivateKey = WG_SRV_PRIV_KEY
      Address = ${vpn_network_address}
      ListenPort = ${wg_port}
      PostUp = /etc/wireguard/postup.sh
      PreDown = /etc/wireguard/predown.sh
  - path: /etc/wireguard/postup.sh
    owner: root:root
    permissions: "0700"
    append: true
    content: |
      iptables -A FORWARD -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o ${public_iface} -j MASQUERADE
  - path: /etc/wireguard/predown.sh
    owner: root:root
    permissions: "0700"
    append: true
    content: |
      iptables -D FORWARD -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o ${public_iface} -j MASQUERADE
  - path: "/home/azureuser/open-devsecops/docker-compose.yml"
    encoding: "b64"
    content: ${docker_compose_b64_encoded}
    owner: "root:root"
    permissions: "0777"
  - path: "/home/azureuser/open-devsecops/init_script.sh"
    encoding: "b64"
    content: ${init_script_b64_encoded}
    owner: "root:root"
    permissions: "0777"
  - path: "/var/www/html/index.html"
    encoding: "b64"
    content: ${setting_up_page_b64_encoded}
    owner: "root:root"
    permissions: "0644"
  - path: "/home/azureuser/open-devsecops/nginx/nginx.conf"
    encoding: "b64"
    content: ${nginx_conf_b64_encoded}
    owner: "root:root"
    permissions: "0777"
  - path: "/home/azureuser/open-devsecops/nginx/setup_nginx.conf"
    encoding: "b64"
    content: ${setup_nginx_conf_b64_encoded}
    owner: "root:root"
    permissions: "0777"

runcmd:
  # Set environment variables
  - sudo hostnamectl set-hostname labvm
  - echo "AZURE_SUBSCRIPTION_ID=${subscription_id}" | sudo tee -a /etc/environment
  - echo "REGION=${region}" | sudo tee -a /etc/environment
  - echo "AWS_ACCOUNT_ID=${aws_account_id}" | sudo tee -a /etc/environment

 # Set up self-signed certificates
  - sudo touch /home/azureuser/.rnd
  - sudo chmod 600 /home/azureuser/.rnd
  - sudo bash -c 'PUBLIC_IP=$(curl -s -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/ipAddress?api-version=2021-02-01&format=text"); openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/nginx.key -out /etc/ssl/certs/nginx.crt -subj "/C=US/ST=NA/L=NA/O=open-devsecops/OU=IT/CN=$PUBLIC_IP"'
  
  # Setup Nginx
  - sudo rm /etc/nginx/sites-enabled/default
  - sudo mv /home/azureuser/open-devsecops/nginx/setup_nginx.conf /etc/nginx/conf.d/setup_opendevsecops.conf
  - sudo systemctl restart nginx

  # Install Packages
  - sudo apt-get install -y wireguard net-tools iptables dnsmasq npm

  # Setup local DNS resolver
  - sudo systemctl stop systemd-resolved.service
  - sudo systemctl disable systemd-resolved.service
  - sudo sed -i '1s/^/nameserver 168.63.129.16\n/' /etc/resolv.conf
  - sudo echo -e "listen-address=192.168.77.1\ncache-size=500\nneg-ttl=60\ndomain-needed\nbogus-priv\nexpand-hosts" | sudo tee /etc/dnsmasq.conf
  - sudo bash -c 'echo -e "192.168.77.1 jenkins.internal\n192.168.77.1 dashboard.internal\n192.168.77.1 api.internal" >> /etc/hosts'
  - sudo systemctl restart dnsmasq
  - sudo systemctl enable dnsmasq

  # Setup Wireguard
  ## - Enable IP Forwarding
  - sudo bash -c "echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf && sysctl -p"
  ## - Generate Wireguard Server Private Key
  - sudo bash -c "wg genkey > /etc/wireguard/private.key && chmod go= /etc/wireguard/private.key"
  ## - Insert Server's Private Key into Wireguard configuration file
  - sudo bash -c "sed -i "s@WG_SRV_PRIV_KEY@$(cat /etc/wireguard/private.key)@g" /etc/wireguard/wg0.conf"
  ## - Generate Server's Public Key
  - sudo bash -c "cat /etc/wireguard/private.key | wg pubkey > /etc/wireguard/public.key && chmod go= /etc/wireguard/public.key"

  ## - Enable and start Wireguard service
  - sudo systemctl enable wg-quick@wg0.service
  - sudo systemctl start wg-quick@wg0.service
  
  # Execute init_script.sh to install tools
  - sudo bash -x /home/azureuser/open-devsecops/init_script.sh